import pandas as pd

# Load the dataset
df = pd.read_csv('Telco-Customer-Churn.csv')
df

----------------------------------


# Display the first few rows of the dataset
df.head()


-----------------------------------



# Get basic information about the dataset
df.info()


------------------------------------


# Summary statistics
df.describe()

------------------------------------


# Convert "TotalCharges" to numeric, handling any conversion errors.
df['TotalCharges'] = pd.to_numeric(df['TotalCharges'], errors='coerce')
# Drop rows with missing values in "TotalCharges."
df.dropna(subset=['TotalCharges'], inplace=True)
df

--------------------------------------------

# Remove duplicates
df.drop_duplicates(inplace=True)
df

--------------------------------------------


import matplotlib.pyplot as plt
import seaborn as sns

# Create a figure with two subplots for box plots.
plt.figure(figsize=(10, 5))
plt.subplot(1, 2, 1)
sns.boxplot(data=df, y='tenure')
plt.title('Box Plot of Tenure')

plt.subplot(1, 2, 2)
sns.boxplot(data=df, y='MonthlyCharges')
plt.title('Box Plot of MonthlyCharges')

plt.tight_layout()
plt.show()

-----------------------------------------------


# For binary columns (e.g., "gender", "Partner"):
df['gender'] = df['gender'].map({'Male': 1, 'Female': 0})
df['Partner'] = df['Partner'].map({'Yes': 1, 'No': 0})

# For other categorical columns (e.g., "InternetService"):
df = pd.get_dummies(df, columns=['InternetService', 'PaymentMethod', 'Contract'])


------------------------------------------------


from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
df[['tenure', 'MonthlyCharges']] = scaler.fit_transform(df[['tenure', 'MonthlyCharges']])
df

-----------------------------------------------


from sklearn.model_selection import train_test_split

X = df.drop('MonthlyCharges', axis=1)
y = df['MonthlyCharges']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
df

----------------------------------------------


df.to_csv("Cleaned_Telecom_Customer_Churn.csv", index=False)
df

